{
  // Place your Рабочая область RiceEngine snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "header-template": {
    "prefix": "hpp",
    "body": [
      "/*",
      " * file: $TM_FILENAME",
      " * author: ${1:name}",
      " * date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
      " */",
      "",
      "#include \"stdafx.hpp\"",
      "",
      "NSP_${2:namespace}_BEGIN",
      "class ${3:ClassName};",
      "NSP_${2:namespace}_END",
      "",
      "#pragma once",
      "",
      "NSP_${2:namespace}_BEGIN",
      "",
      "class ${3:ClassName} {",
      "  public:",
      "    ${3:ClassName}();",
      "    ~${3:ClassName}();",
      "",
      "  private:",
      "",
      "};",
      "",
      "NSP_${2:namespace}_END"
    ],
    "description": "Header template"
  },
  "source-template": {
    "prefix": "cpp",
    "body": [
      "/*",
      " * file: $TM_FILENAME",
      " * author: ${1:name}",
      " * date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
      " */",
      "",
      "#include \"pch.h\"",
      "",
      "#include <${3:header}.hpp>",
      "",
      "NSP_${2:namespace}_BEGIN",
      "",
      "NSP_${2:namespace}_END"
    ],
    "description": "Source template"
  }
}
